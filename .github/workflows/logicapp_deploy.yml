# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# Stolen from here: https://github.com/Azure/logicapps/tree/master/github-sample

name: (classic) Build and Deploy Logic App. 

on:
  workflow_dispatch:
    # Trigger the workflow every time the build workflow ran to completion
  push:
    paths:
      - "logic/**"

jobs:
  logic_app_build: 
    name: Build 
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout
      uses: actions/checkout@v1
    - name: Package logic
      run: (cd logic; mkdir -p ../output; zip -r ../output/logic.zip .)
    - name: Upload app zip package
      uses: actions/upload-artifact@v2
      with:
        name: logic
        path: ./output/
        retention-days: 1 

  logic_app_deploy: 
    name: Deploy 
    runs-on: ubuntu-latest
    needs: [logic_app_build]
    environment: 
      name: Dev
    steps: 
    - name: Checkout
      uses: actions/checkout@v1    
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true 
    - uses: actions/download-artifact@master
      with:
        name: logic
        path: ./output/

    - name: Get publish Profile
      id: publishprofile
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $profile = Get-AzWebAppPublishingProfile `
              -ResourceGroupName ${{ secrets.RG_LA }} `
              -Name ${{ secrets.LA_NAME }}
          $profile = $profile.Replace("`r", "").Replace("`n", "")
          $TEST_VAR_ENV = "test"
          "PUBLISH_PROFILE:$TEST_VAR_ENV" >> $env:GITHUB_ENV
        azPSVersion: latest
        
    - name: Show publish profile
      id: show_profile
      run: |
        printf '%s\n' "Hello, World $PUBLISH_PROFILE"
        
    - name: Set the value
      id: step_one
      run: |
        echo "action_state=yellow" >> "$GITHUB_ENV"
    - name: Use the value
      id: step_two
      run: |
        printf '%s\n' "$action_state" # This will output 'yellow'
