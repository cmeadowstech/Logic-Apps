# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Terraform
    jobs:
      - job: DeployTerraformIAC
        continueOnError: false
        steps:
          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
              backendServiceArm: 'CMEADOWS-ADO-SP'
              backendAzureRmResourceGroupName: 'ado-tf-test'
              backendAzureRmStorageAccountName: 'adobackend029390'
              backendAzureRmContainerName: 'tfbackend'
              backendAzureRmKey: 'EVgq3C4uLs2MJld25Df9kD/NjcGL9XgnBRI1YEN6UyyIC1LEYA5rAMIsHPR39850THC8QhimslSx+AStPyy8lA=='

          - task: TerraformTaskV4@4
            displayName: 'Terraform Validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          
          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
              environmentServiceNameAzureRM: 'CMEADOWS-ADO-SP'
              
          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
              environmentServiceNameAzureRM: 'CMEADOWS-ADO-SP'
              
  - stage: AppContent
    jobs:
      - job: DeployAppContent
        continueOnError: false
        steps:
        - task: CopyFiles@2
          displayName: 'Copy Files'
          inputs:
            SourceFolder: 'logic'
            Contents: '**'
            TargetFolder: 'project_output'
            
        - task: ArchiveFiles@2
          displayName: 'Create ZIP'
          inputs:
            rootFolderOrFile: '$(Build.BinariesDirectory)/project_output'
            includeRootFolder: true
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true
            
        - task: AzureFunctionApp@1
          displayName: 'ZIP Deploy'
          inputs:
            azureSubscription: 'CMEADOWS-ADO-SP'
            appType: 'functionApp'
            appName: 'dev-la-24055'
            package: '$(System.DefaultWorkingDirectory)/project_output/*.zip'
            deploymentMethod: 'zipDeploy'